<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="722a382e-a571-41cc-843d-6b6a06e8b154" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.gitmodules" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/phala-blockchain" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Cargo.toml" beforeDir="false" afterPath="$PROJECT_DIR$/Cargo.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/debug-cli/src/main.rs" beforeDir="false" afterPath="$PROJECT_DIR$/debug-cli/src/main.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/phala-blockchain/crates/phactory/api/src/endpoints.rs" beforeDir="false" afterPath="$PROJECT_DIR$/phala-blockchain/crates/phactory/api/src/endpoints.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/utils/Cargo.toml" beforeDir="false" afterPath="$PROJECT_DIR$/utils/Cargo.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/utils/src/substrate/contract/ink/config/config.toml" beforeDir="false" afterPath="$PROJECT_DIR$/utils/src/substrate/contract/ink/config/config.toml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/utils/src/substrate/contract/ink/config/testcontract.contract" beforeDir="false" afterPath="$PROJECT_DIR$/utils/src/substrate/contract/ink/config/testcontract.contract" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/utils/src/substrate/contract/ink/mod.rs" beforeDir="false" afterPath="$PROJECT_DIR$/utils/src/substrate/contract/ink/mod.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/utils/src/substrate/contract/mod.rs" beforeDir="false" afterPath="$PROJECT_DIR$/utils/src/substrate/contract/mod.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/utils/src/substrate/contract/query.rs" beforeDir="false" afterPath="$PROJECT_DIR$/utils/src/substrate/contract/query.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/utils/src/substrate/mod.rs" beforeDir="false" afterPath="$PROJECT_DIR$/utils/src/substrate/mod.rs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/utils/src/substrate/phala.rs" beforeDir="false" afterPath="$PROJECT_DIR$/utils/src/substrate/phala.rs" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="lp35bacl" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectId" id="2Qd7rj1JhUpE5LmWQor2KikiQpQ" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/emanuvalza/dev/drng-protocol/.github&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;org.rust.cargo.project.model.PROJECT_DISCOVERY&quot;: &quot;true&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;MavenSettings&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/.github" />
      <recent name="$PROJECT_DIR$/.github/actions" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="cargo clean" />
      <command value="cargo build" />
    </option>
  </component>
  <component name="RunManager" selected="Cargo.Run debug-cli">
    <configuration name="Run debug-cli" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="run --package debug-cli --bin debug-cli" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="false" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="build" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="build" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="false" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="clean" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="clean" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <option name="emulateTerminal" value="false" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <envs />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Cargo.Run debug-cli" />
        <item itemvalue="Cargo.build" />
        <item itemvalue="Cargo.build" />
        <item itemvalue="Cargo.build" />
        <item itemvalue="Cargo.clean" />
      </list>
    </recent_temporary>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.cargo/bin" />
    <option name="version" value="2" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="722a382e-a571-41cc-843d-6b6a06e8b154" name="Changes" comment="" />
      <created>1685671806239</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1685671806239</updated>
      <workItem from="1685671810906" duration="3138000" />
      <workItem from="1685987604579" duration="125000" />
      <workItem from="1685987890046" duration="528000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>